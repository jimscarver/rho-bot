#define $directory "testdir"
#define $ballot "color"
new lockerCh, ret, ret1, loop, $stdout, $lookup in { 
  lookup!($locker_%%$myusername, *lockerCh) | for(locker <- lockerCh) { 
    locker!("get", $myprivkey.hexToBytes(), $locker_nonce_%%$myusername, *stdout, *ret) | 
    for (@items  <- ret) { 
      @{items.get("peek")}!("directory", $directory, *ret) |
      @{items.get("peek")}!("ballot", $ballot, *ret1) |
      for ( @[{"read": *read, ..._}, ..._] <- ret; 
            @[{"chair": *chair, ..._}, ..._] <- ret1 ) {
        contract loop ( @map ) = {
          match  map {
            {} => Nil
            { username: *inbox, ...tail } => {
              chair!("giveRightToVote", *ret) |
              for (@vote <- ret) {
                inbox!(["vote", $ballot, vote])
              } |
              loop!(tail)
            }
          }
        } |
        read!(*ret) |
        for ( @members <- ret ) {
          loop!(members)
        }
      } |
      stdout!(["#define $locker_nonce_" ++ $myusername, {$locker_nonce_%%$myusername + 1}])
    }
  }
}
